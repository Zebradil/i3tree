#!/usr/bin/env perl

use strict;
use warnings;

use AnyEvent::I3;
use X11::Protocol;

# get path to i3 socket by reading property of X11 root window
my $x = X11::Protocol->new();
my ( $value, $mtype, $format, $bytes_after ) =
  $x->GetProperty( $x->root, $x->atom('I3_SOCKET_PATH'),
    'AnyPropertyType', 0, -1, 0 );

my $i3 = i3($value);
$i3->connect->recv or die "Error connecting";

# 4 is message type to receive description of the tree
my $tree = $i3->message(4)->recv;

sub display_node {
    my ( $description, $depth ) = @_;
    my $margin = "\t" x $depth;
    print $margin . $description . "\n";
    return $depth + 1;
}

sub walk_tree {
    my ( $node, $depth ) = @_;

    my $type        = $node->{'type'};
    my $orientation = $node->{'orientation'};
    my $name        = $node->{'name'};

    # 4 is type for workspace
    if ( $type == 4 ) {
        $depth = display_node( "Workspace $name ($orientation)", $depth );
    }

    # 2 is type for several kinds of containers
    if ( $type == 2 ) {
        # no orientation, so probably a window
        if ( $orientation eq "none" ) {
            # filter out two possible non-windows
            unless ( $name eq "content" or $name =~ "^i3bar" ) {
                $depth = display_node( "Window $name", $depth );
            }
        }
        # orientation, so definitely a split container
        else {
            $depth = display_node( "Split ($orientation)", $depth );
        }
    }

    foreach ( @{ $node->{'nodes'} } ) {
        walk_tree( $_, $depth );
    }
}

walk_tree( $tree, 0 );

